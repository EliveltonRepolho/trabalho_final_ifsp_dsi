/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ifsp.dsi.janela;


import ifsp.dsi.bo.IngredienteBO;
import ifsp.dsi.bo.MontavelBO;
import ifsp.dsi.entidade.Ingrediente;
import ifsp.dsi.entidade.Montavel;
import ifsp.dsi.entidade.MontavelIngrediente;
import ifsp.dsi.entidade.MontavelIngredientes;
import ifsp.dsi.enums.MontavelTipo;
import ifsp.dsi.janela.tabela.ModeloTabelaIngredienteMontavel;
import ifsp.dsi.janela.tabela.ModeloTabelaMontavel;
import ifsp.dsi.janela.util.MessageBox;
import java.math.BigDecimal;
import java.util.List;

/**
 *
 * @author repolho
 */
public class JanelaManterSuco extends javax.swing.JFrame {

    
    private MontavelBO mMontavelBO;
    private MontavelIngredientes mMontavelIngredientes;
    private ModeloTabelaIngredienteMontavel modelIngredientes;
    private ModeloTabelaMontavel modelSucos;
    
    /**
     * Creates new form JanelaCadItemProduto
     */
    public JanelaManterSuco() {
        initComponents();
        
        mMontavelBO = new MontavelBO();
        
        popularTabelaSucos();
        populaComboIngredientes();
        
        preparaEditavel(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtNome = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtValorCusto = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnExcluirSelecionados = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnNovo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSucos = new javax.swing.JTable();
        txtValorVenda = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtPercentualLucro = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        cboIngredientes = new javax.swing.JComboBox<>();
        btnAddIngrediente = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtQtdeIngrediente = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaIngredientes = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 32, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 45, Short.MAX_VALUE)
        );

        jLabel2.setText("Id");

        jLabel3.setText("Nome");

        txtId.setEditable(false);
        txtId.setToolTipText("Id gerado automaticamente");

        txtNome.setToolTipText("Nome do ingrediente");

        jLabel6.setText("Valor de Custo");

        txtValorCusto.setToolTipText("Valor de custo");

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Gerenciamento dos Sucos");
        jLabel1.setToolTipText("");

        btnExcluirSelecionados.setText("Excluir selecionado(s)");
        btnExcluirSelecionados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirSelecionados(evt);
            }
        });

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionNovo(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionEditar(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionExcluir(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionSalvar(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionaCancelar(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSalvar)
                .addGap(21, 21, 21))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSalvar)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnEditar)
                        .addComponent(btnNovo)
                        .addComponent(btnCancelar)
                        .addComponent(btnExcluir)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        modelSucos = new ModeloTabelaMontavel();
        tableSucos.setModel(modelSucos);
        tableSucos.setColumnSelectionAllowed(true);
        tableSucos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableSucosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableSucos);
        tableSucos.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        txtValorVenda.setToolTipText("Valor de custo");

        jLabel7.setText("Valor de Venda");

        jLabel8.setText("Perc. Lucro");

        txtPercentualLucro.setToolTipText("Valor de custo");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Adicionar Ingrediente"));

        btnAddIngrediente.setText("Adicionar");
        btnAddIngrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionAddIngrediente(evt);
            }
        });

        jLabel10.setText("Qtde");

        txtQtdeIngrediente.setText("0.0");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboIngredientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtQtdeIngrediente, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddIngrediente)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboIngredientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddIngrediente)
                    .addComponent(jLabel10)
                    .addComponent(txtQtdeIngrediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        modelIngredientes = new ModeloTabelaIngredienteMontavel();
        tabelaIngredientes.setModel(modelIngredientes);
        tabelaIngredientes.setToolTipText("Ingredientes que fazem parte do prato");
        jScrollPane2.setViewportView(tabelaIngredientes);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Ingrediente que compõe o suco");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(211, 211, 211)
                                    .addComponent(btnExcluirSelecionados))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtValorCusto, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                            .addComponent(txtId))
                                        .addGap(21, 21, 21)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtPercentualLucro, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtValorVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(184, 184, 184))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(jLabel2)
                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(69, 69, 69)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnExcluirSelecionados))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel6)
                            .addComponent(txtValorCusto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(txtPercentualLucro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(txtValorVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(75, 75, 75))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void actionSalvar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionSalvar
        
        if(!validaForm(false))
            return;
        
        List<MontavelIngrediente> lista = modelIngredientes.getList();
        
        calculaValorVenda();
        
        Montavel montavel = new Montavel(
                Long.valueOf(txtId.getText()), 
                txtNome.getText(), 
                new BigDecimal(txtValorCusto.getText()), 
                MontavelTipo.SUCO, 
                new BigDecimal(txtPercentualLucro.getText())
        );
        
        for (MontavelIngrediente montavelIngrediente : lista) {
            montavelIngrediente.setMontavel(montavel);
        }
        
        
        
        mMontavelBO.salvar(
                new MontavelIngredientes(lista)
        );
        modelSucos.addRow(montavel);
        MessageBox.showInfo("Salvo com sucesso !");
        
    }//GEN-LAST:event_actionSalvar

    private void actionNovo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionNovo
        preparaNovo();
    }//GEN-LAST:event_actionNovo

    private void actionEditar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionEditar
        preparaEditar();
    }//GEN-LAST:event_actionEditar

    private void actionExcluir(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionExcluir
        if(MessageBox.showAskYesNo("Excluir ?") == MessageBox.YES_OPTION){
            
            Montavel montavel = mMontavelIngredientes.getMontavelIngredientes().get(0).getMontavel();
            
            mMontavelBO.apagar(montavel); 
            modelSucos.removeRow(montavel);
        }        
                
    }//GEN-LAST:event_actionExcluir

    private void btnExcluirSelecionados(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirSelecionados
        List<Montavel> selecionados = modelSucos.getSelecionados();
        
        if(MessageBox.showAskYesNo("Excluir ?") == MessageBox.YES_OPTION){
            for (Montavel m : selecionados) {

                if(mMontavelBO.apagar(m))
                    modelSucos.removeRow(m);
            }
        }
        
        
    }//GEN-LAST:event_btnExcluirSelecionados

    private void actionaCancelar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionaCancelar
        if(mMontavelIngredientes != null)
            atualizaValores();
        
        preparaEditavel(false);
    }//GEN-LAST:event_actionaCancelar

    private void tableSucosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableSucosMouseClicked
        Montavel montavel = modelSucos.getValueAt(tableSucos.getSelectedRow());
        mMontavelIngredientes = mMontavelBO.listarByMontavel(montavel);
        atualizaValores();
        preparaEditavel(false);
    }//GEN-LAST:event_tableSucosMouseClicked

    private void actionAddIngrediente(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionAddIngrediente
        
        if(!validaForm(true))
            return;
        
        if(!validaFormAddIngrediente())
            return;
        
        Montavel montavel = new Montavel(
                                txtNome.getText(), 
                                BigDecimal.ZERO, 
                                MontavelTipo.SUCO, 
                                new BigDecimal(txtPercentualLucro.getText())
        );
        
        MontavelIngrediente novo = new MontavelIngrediente(
                montavel,
                (Ingrediente) cboIngredientes.getSelectedItem(), 
                Double.valueOf(txtQtdeIngrediente.getText())
        );
        
        modelIngredientes.addRow(novo);
    }//GEN-LAST:event_actionAddIngrediente

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddIngrediente;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnExcluirSelecionados;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<Ingrediente> cboIngredientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabelaIngredientes;
    private javax.swing.JTable tableSucos;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPercentualLucro;
    private javax.swing.JTextField txtQtdeIngrediente;
    private javax.swing.JTextField txtValorCusto;
    private javax.swing.JTextField txtValorVenda;
    // End of variables declaration//GEN-END:variables

    private void preparaNovo() {
        
        preparaEditavel(true);
        
        txtId.setText("0");
        txtNome.setText("");
        txtPercentualLucro.setText("");
        txtValorCusto.setText("");
        txtValorVenda.setText("");
        
        modelIngredientes.removeAllRows();
        
        txtNome.requestFocus();
        
        btnNovo.setEnabled(false);
        btnEditar.setEnabled(false);
        btnExcluir.setEnabled(false);
    }

    private void preparaEditavel(boolean editavel){
        
        txtId.setEnabled(false);
        txtValorCusto.setEnabled(false);
        txtValorVenda.setEnabled(false);
        
        txtNome.setEnabled(editavel);
        txtPercentualLucro.setEnabled(editavel);
        txtQtdeIngrediente.setEnabled(editavel);
        cboIngredientes.setEnabled(editavel);
        btnAddIngrediente.setEnabled(editavel);
        
        tabelaIngredientes.setEnabled(editavel);
    }
    
    private void preparaEditar() {
        preparaEditavel(true);
        
        txtNome.requestFocus();
        
        btnEditar.setEnabled(false);
        btnExcluir.setEnabled(true);
        btnCancelar.setEnabled(true);
        btnNovo.setEnabled(false);
    }

    private boolean validaForm(boolean isAdicionandoIngrediente) {
        boolean valid = true;
        String texto = "";
        
        if(txtNome.getText().equals("")){
            texto = "Nome não pode estar vazio !";
            valid = false;
        }
        
        if(txtPercentualLucro.getText().equals("")){
            txtPercentualLucro.setText("0");
        }else if(Double.valueOf(txtPercentualLucro.getText()) <= 0){
            String aux = "Percentual de lucro inválido !";
            texto += texto.equals("") ? aux : "\n" + aux;
            valid = false;
        }
        
        if(!isAdicionandoIngrediente && modelIngredientes.getList().size() <= 0){
            String aux = "Deve have pelo menos um ingrediente adicionado no prato !";
            texto += texto.equals("") ? aux : "\n" + aux;
            valid = false;
        }
        
        if(!valid){
            MessageBox.showWarning(texto);
        }
        
        return valid;
    }

    private void populaComboIngredientes(){
        
        IngredienteBO bo = new IngredienteBO();
        
        cboIngredientes.removeAllItems();
        
        List<Ingrediente> ingredientes = bo.listarByTipo(MontavelTipo.SUCO);
                
        for (Ingrediente i : ingredientes) {
            cboIngredientes.addItem(i);
        }
        
    }
    
    private void popularTabelaSucos() {
        
        List<Montavel> lista = mMontavelBO.listarByTipo(MontavelTipo.SUCO);
        
        for (Montavel m : lista) {
            modelSucos.addRow(m);
        }

    }

    private void atualizaValores() {
        
        Montavel montavel = mMontavelIngredientes.getMontavelIngredientes().get(0).getMontavel();
        
        txtId.setText(
                String.valueOf(montavel.getId())
        );
        
        txtNome.setText(
                montavel.getNome()
        );
        
        txtValorCusto.setText(
                String.valueOf(montavel.getValorCusto())
        );
        
        txtValorVenda.setText(
                String.valueOf(montavel.getValorVenda())
        );
        
        txtPercentualLucro.setText(
                String.valueOf(montavel.getPercentualLucro())
        );
        
        atualizarTabelaIngredientes();
        
        resetaAdicionarIngredientes();
    }

    private void atualizarTabelaIngredientes() {
        
        modelIngredientes.removeAllRows();
        
        MontavelIngredientes lista = mMontavelBO.listarByMontavel(
                mMontavelIngredientes.getMontavelIngredientes().get(0).getMontavel()
        );
        
        for (MontavelIngrediente m : lista.getMontavelIngredientes()) {
            modelIngredientes.addRow(m);
        }
    }

    private boolean validaFormAddIngrediente() {
        boolean valid = true;
        String texto = "";
        
        if(txtQtdeIngrediente.getText().equals("")){
            txtQtdeIngrediente.setText("0");
        }else if(Double.valueOf(txtQtdeIngrediente.getText()) <= 0){
            texto = "Quantidade para o ingrediente inválida !";
            valid = false;
        }
        
        if(!valid){
            MessageBox.showWarning(texto);
        }
        
        return valid;
    }
    
    private void resetaAdicionarIngredientes() {
        cboIngredientes.setSelectedIndex(-1);
        txtQtdeIngrediente.setText("0");
    }

    private BigDecimal calculaValorCusto() {
        BigDecimal total = new BigDecimal(0);
        
        List<MontavelIngrediente> lista = modelIngredientes.getList();
        
        for (MontavelIngrediente item : lista) {
            Ingrediente i = item.getIngrediente();
            
            BigDecimal custo = i.getValorCusto()
                            .multiply(new BigDecimal(item.getQtde()));
            
            total.add(custo);
        }
        
        txtValorCusto.setText(String.valueOf(total));
        
        return total;
    }
    
    private BigDecimal calculaValorVenda() {
        BigDecimal custo = calculaValorCusto();
        
        BigDecimal venda = custo.multiply(
                new BigDecimal(txtPercentualLucro.getText())
                );
        venda.add(custo);
        
        txtValorVenda.setText(String.valueOf(venda));
        
        return venda;
    }
}
